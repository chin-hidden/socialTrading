{"version":3,"sources":["../../../frontend/js/csrf.js"],"names":[],"mappings":";;;AAAA,aAAS,SAAS,GAAG;;AAEjB,iBAAS,SAAS,CAAC,IAAI,EAAE;AACrB,gBAAI,WAAW,GAAG,IAAI,CAAC;AACvB,gBAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,EAAE,EAAE;AAC1C,oBAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,wBAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC,wBAAI,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAK,IAAI,GAAG,GAAG,AAAC,EAAE;AACtD,mCAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AACpE,8BAAM;qBACT;iBACJ;aACJ;AACD,mBAAO,WAAW,CAAC;SACtB;;AAED,iBAAS,cAAc,CAAC,MAAM,EAAE;;AAE5B,mBAAQ,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAE;SACtD;;AAED,YAAI,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;AACvC,SAAC,CAAC,SAAS,CAAC;AACR,sBAAU,EAAE,oBAAS,GAAG,EAAE,QAAQ,EAAE;AAChC,oBAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;AAErD,uBAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;iBACnD;aACJ;SACJ,CAAC,CAAC;KACN;;AAGD,aAAS,EAAE,CAAC","file":"csrf.js","sourcesContent":["function setupCsrf() {\n    // Code taken from Django's CSRF wiki page\n    function getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie != '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = jQuery.trim(cookies[i]);\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    function csrfSafeMethod(method) {\n        // these HTTP methods do not require CSRF protection\n        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n    }\n\n    var csrftoken = getCookie('csrftoken');\n    $.ajaxSetup({\n        beforeSend: function(xhr, settings) {\n            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n                // FIXME The header name is generated on the spring side\n                xhr.setRequestHeader(\"X-CSRF-TOKEN\", csrftoken);\n            }\n        }\n    });\n}\n\n\nsetupCsrf();\n"]}