{"version":3,"sources":["../../../frontend/js/models.js"],"names":[],"mappings":";;;;;;;;;;AAIO,QAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;AAC5C,WAAG,EAAE,iBAAiB;;AAEtB,kBAAU,EAAE,oBAAS,IAAI,EAAE;AACvB,mBAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzB;;AAED,aAAK,EAAE,eAAS,IAAI,EAAE;AAClB,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;KACJ,CAAC,CAAC;;YAVQ,OAAO,GAAP,OAAO;AAYX,QAAI,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;AAClD,aAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACzB,uBAAW,EAAE,UAAU;SAC1B,CAAC;AACF,aAAK,EAAE,eAAS,IAAI,EAAE;AAClB,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;KACJ,CAAC,CAAC;;YAPQ,aAAa,GAAb,aAAa;AAUxB,QAAI,iBAAiB,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;AAC/C,aAAK,EAAE,eAAS,IAAI,EAAE;AAClB,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;KACJ,CAAC,CAAC;;AAEI,QAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACxC,mBAAW,EAAE,UAAU;;AAEvB,gBAAQ,EAAE;AACN,4BAAgB,EAAE,IAAI,aAAa,EAAE;AACrC,qBAAS,EAAE,IAAI,iBAAiB,EAAE;AAClC,sBAAU,EAAE,IAAI;AAChB,sBAAU,EAAE,CAAC;AACb,gBAAI,EAAE,CAAC;AACP,kBAAM,EAAE,CAAC;AACT,6BAAiB,EAAE,CAAC;AACpB,sBAAU,EAAE,CAAC;SAChB;;AAED,kBAAU,EAAE,sBAAW;AACnB,gBAAI,KAAK,GAAG,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;SA0BpB;;AAED,aAAK,EAAE,eAAS,IAAI,EAAE;AAClB,gBAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACvB,gBAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;AACtF,gBAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAC;;AAErC,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,mBAAmB,GAAG,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;AAC/E,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;AAC9B,mBAAO,IAAI,CAAC;SACf;;AAED,mBAAW,EAAE,qBAAS,MAAM,EAAE;AAC1B,mBAAO,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC;SAC3E;KACJ,CAAC,CAAC;YAxDQ,QAAQ,GAAR,QAAQ","file":"models.js","sourcesContent":["//\n// These models are the \"stores\" in Facebook's Flux architecture\n//\n\nexport var Traders = Backbone.Collection.extend({\n    url: \"/api/v1/traders\",\n\n    comparator: function(item) {\n        return item.get('id');\n    },\n\n    parse: function(data) {\n        return data.result;\n    }\n});\n\nexport var FollowingRels = Backbone.Collection.extend({\n    model: Backbone.Model.extend({\n        idAttribute: \"traderId\"\n    }),\n    parse: function(data) {\n        return data.result;\n    }\n});\n\n\nvar FollowerPositions = Backbone.Collection.extend({\n    parse: function(data) {\n        return data.result;\n    }\n});\n\nexport var Follower = Backbone.Model.extend({\n    idAttribute: \"username\",\n\n    defaults: {\n        followingTraders: new FollowingRels(),\n        positions: new FollowerPositions(),\n        firstLogin: true,\n        riskFactor: 0,\n        cash: 0,\n        profit: 0,\n        totalCurrentValue: 0,\n        stockValue: 0,\n    },\n\n    initialize: function() {\n        var _this = this;\n\n        // dispatcher.register(function(message) {\n        //     switch (message.type) {\n        //         case \"ask_to_follow_trader\":\n        //             $.post(\"/api/v1/follower/\" + _this.id + \"/following\", {\n        //                 traderid: message.trader.id,\n        //                 money: message.allocatedMoney,\n        //                 maxopen: 3\n        //             }).then(function() {\n        //                 _this.fetch();\n        //                 traders.fetch();\n        //             });\n        //             break;\n        //         case \"ask_to_unfollow_trader\":\n        //             $.ajax({\n        //                 url: \"/api/v1/follower/\" + _this.id + \"/following/\" + message.trader.id,\n        //                 method: \"DELETE\",\n        //                 success: function() {\n        //                     _this.fetch();\n        //                     traders.fetch();\n        //                 }\n        //             });\n        //             break;\n        //     }\n        // });\n    },\n\n    parse: function(data) {\n        var data = data.result;\n        this.get(\"followingTraders\").url = \"/api/v1/follower/\" + data.username + \"/following\";\n        this.get(\"followingTraders\").fetch();\n\n        this.get(\"positions\").url = \"/api/v1/follower/\" + data.username + \"/positions\";\n        this.get(\"positions\").fetch();\n        return data;\n    },\n\n    isFollowing: function(trader) {\n        return this.get(\"followingTraders\").get(trader.get(\"id\")) !== undefined;\n    }\n});\n"]}