{"version":3,"sources":["../../../frontend/js/wizardScreen.jsx"],"names":[],"mappings":"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","file":"wizardScreen.js","sourcesContent":["var WizardScreen = React.createClass({\n    componentDidMount: function() {\n    },\n\n    btnFinishClicked: function() {\n        var innerRiskSlider = this.refs.riskSlider.refs.riskSlider.getDOMNode();\n        var riskFactor = parseInt($(innerRiskSlider).val());\n        var selectedTrader = this.refs.traderSelector.selectedTrader();\n\n        var allocatedMoneyNode = this.refs.allocatedMoney.getDOMNode();\n        if (allocatedMoneyNode.value === \"\") {\n            var allocatedMoney = allocatedMoneyNode.placeholder;\n        } else {\n            var allocatedMoney = allocatedMoneyNode.value;\n        }\n\n        var value = parseInt(allocatedMoney);\n        if (value === NaN || value < 0) {\n            alert(\"Số tiền phải là số dương!\");\n        }\n\n        // FIXME riskFactor is not used yet\n        // FIXME Handle the error case\n        // dispatcher.dispatch({\n        //     type: \"ask_to_follow_trader\",\n        //     trader: selectedTrader,\n        //     allocatedMoney: allocatedMoney\n        // });\n\n        me.set(\"riskFactor\", riskFactor);\n        me.save();\n\n        this.props.onCompletion();\n    },\n\n    cancel: function() {\n        this.props.onCompletion();\n    },\n\n    render: function() {\n        var styles = {\n            slider: {\n                marginBottom: 60\n            }\n        };\n\n        return (\n          <div className=\"panel panel-default wizard\">\n            <div className=\"panel-heading\">\n              <h2 className=\"panel-title\">Cài đặt Tài khoản của bạn</h2>\n            </div>\n\n            <div className=\"panel-body\">\n              <div className=\"step\">\n                <h3>Bước 1: Đặt mức độ rủi ro bạn sẵn sàng chấp nhận</h3>\n                <RiskSlider style={styles.slider} ref=\"riskSlider\"/>\n              </div>\n\n              <div className=\"step\">\n                <h3>Bước 2: Chọn chiến lược</h3>\n                <TraderCarousel traders={traders} ref=\"traderSelector\"/>\n              </div>\n\n              <div className=\"step\">\n                <h3>Bước 3: Chọn số tiền đặt cho Nhà đầu tư bạn vừa chọn</h3>\n                <input type=\"number\" min=\"1\" placeholder=\"1\" ref=\"allocatedMoney\"/> triệu VND\n              </div>\n\n              <div className=\"button-row clearfix\">\n                <button className=\"btn btn-default\" onClick={this.cancel}>Bỏ qua</button>\n                <button className=\"btn btn-primary\" onClick={this.btnFinishClicked}>Hoàn thành</button>\n              </div>\n                </div>\n            </div>\n        );\n    }\n});\n\n\n// FIXME Using global `traders` object\nvar TraderCarousel = React.createClass({\n    getInitialState: function() {\n        return {\n            selectedTrader: traders.models[0],\n            currentSlide: 0\n        }\n    },\n\n    componentDidMount: function() {\n        var thumb = this.refs.thumbSlider.getDOMNode();\n        var detail = this.refs.detailSlider.getDOMNode();\n\n        $(thumb).slick({\n            asNavFor: $(detail),\n            slidesToShow: 3,\n            slidesToScroll: 1,\n            centerMode: true,\n            centerPadding: '60px',\n            focusOnSelect: true,\n            nextArrow: this.refs.btnNext.getDOMNode(),\n            prevArrow: this.refs.btnPrev.getDOMNode(),\n        });\n\n        $(detail).slick({\n            asNavFor: $(thumb),\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            arrows: false,\n        });\n\n        var _this = this;\n        $(detail).on(\"afterChange\", function(event, slick, currentSlide) {\n            _this.setState({\n                selectedTrader: traders.models[currentSlide],\n                currentSlide: currentSlide\n            });\n        });\n    },\n\n    selectedTrader: function() {\n        return this.state.selectedTrader;\n    },\n\n    render: function() {\n        var traderNodes = traders.map(function(trader, index) {\n            return <TraderLine trader={trader} index={index + 1} />;\n        });\n\n        var buttonStyle = {\n                position: 'absolute',\n                top: 0,\n                width: 30,\n                height: '100%',\n                backgroundColor: '#EEE',\n                border: \"none\"\n        };\n\n        var styles = {\n            next: _.extend({\n                right: 0,\n            }, buttonStyle),\n            prev: _.extend({\n                left: 0,\n            }, buttonStyle),\n            thumbSlider: {\n                position: 'relative'\n            },\n            detail: {\n                marginBottom: 20\n            }\n        };\n\n        return (\n            <div>\n              <div ref=\"detailSlider\" style={styles.detail}>\n                {traderNodes}\n              </div>\n\n              <div style={styles.thumbSlider}>\n                <div ref=\"thumbSlider\" className=\"trader-thumb-slider\">\n                  <div><img className=\"img-thumbnail\" src=\"/static/img/trader1.jpg\"/></div>\n                  <div><img className=\"img-thumbnail\" src=\"/static/img/trader2.jpg\"/></div>\n                  <div><img className=\"img-thumbnail\" src=\"/static/img/trader3.jpg\"/></div>\n                  <div><img className=\"img-thumbnail\" src=\"/static/img/trader4.jpg\"/></div>\n                </div>\n\n                <button style={styles.next} ref=\"btnNext\">&#9654;</button>\n                <button style={styles.prev} ref=\"btnPrev\">&#9664;</button>\n              </div>\n            </div>\n        );\n    }\n});\n\n\nvar TraderLine = React.createClass({\n    followBtnToggled: function() {\n        // if (me.isFollowing(this.props.trader)) {\n        //     dispatcher.dispatch({\n        //         type: \"ask_to_unfollow_trader\",\n        //         trader: this.props.trader\n        //     });\n        // } else {\n        //     dispatcher.dispatch({\n        //         type: \"ask_to_follow_trader\",\n        //         trader: this.props.trader\n        //     });\n        // }\n    },\n\n    render: function() {\n        var followBtnClasses = \"btn \";\n        if (me.isFollowing(this.props.trader)) {\n            var followButtonText = \"Unfollow\";\n            followBtnClasses += \"btn-danger\";\n        } else {\n            followButtonText = \"Follow\";\n            followBtnClasses += \"btn-primary\";\n        }\n\n        var imgSrc = \"/static/img/trader\" + this.props.index + \".jpg\";\n        return (\n            <div className=\"traderLine clearfix\">\n              <div className=\"block\">\n                <img src={imgSrc} className=\"img-thumbnail\"/>\n              </div>\n\n              <div className=\"block basic-info\">\n                <h2>{this.props.trader.get(\"name\")}</h2>\n                <p className=\"text-muted\">\n                  {this.props.trader.get(\"id\")}\n                  {this.props.trader.get(\"description\")}\n                </p>\n              </div>\n\n              <div className=\"block\">\n                <span className=\"text-label\">NAV</span><br/>\n                <strong className=\"text-success\">{this.props.trader.get(\"cash\")} VND</strong><br/>\n\n                <span className=\"text-label\">Số người copy</span><br/>\n                <strong className=\"text-success\">{Math.floor(Math.random() * 1000)}</strong><br/>\n              </div>\n\n              <div className=\"block\">\n                <span className=\"text-label\">ROI</span><br/>\n                <strong className=\"text-success\">{(Math.random() * 100).toFixed(2)}%</strong>\n                {/* <button type=\"submit\"\n                   className={followBtnClasses}\n                   onClick={this.followBtnToggled}>{{followButtonText}}</button> */}\n              </div>\n            </div>\n        );\n    }\n});\n\n"]}