{"version":3,"sources":["../../../frontend/js/accountScreen.jsx"],"names":[],"mappings":"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","file":"accountScreen.js","sourcesContent":["import {me, traders} from \"common\";\nimport {formatCurrency, getMarketInfo} from \"utils\";\nimport RiskSlider from \"RiskSlider\";\n\n\nexport var AccountScreen = React.createClass({\n    getInitialState: function() {\n        return {\n            activeTab: \"overview\"\n        };\n    },\n\n    switchTab: function(tabName, event) {\n        event.preventDefault();\n        this.setState({activeTab: tabName});\n    },\n\n    render: function() {\n        var tabContent;\n\n        var active = {};\n\n        switch (this.state.activeTab) {\n            default:\n            case \"overview\":\n                tabContent = (<OverviewPanel/>);\n                active[\"overview\"] = \"active\";\n                break;\n            case \"danhmuc\":\n                tabContent = (<PositionPanel/>);\n                active[\"danhmuc\"] = \"active\";\n        }\n\n        return (\n            <div>\n              <InfoBox/>\n\n              <ul className=\"nav nav-tabs\">\n                <li className={active['overview']}>\n                  <a href=\"#\"  onClick={this.switchTab.bind(this, \"overview\")}>\n                    Tổng quan\n                  </a>\n                </li>\n                <li className={active['danhmuc']}>\n                  <a href=\"#\" onClick={this.switchTab.bind(this, \"danhmuc\")}>\n                    Danh mục đầu tư\n                  </a>\n                </li>\n                <li className={active['solenh']}>\n                  <a href=\"#\" onClick={this.switchTab.bind(this, \"solenh\")}>\n                    Sổ lệnh trong ngày\n                  </a>\n                </li>\n                <li className={active['lichsugd']}>\n                  <a href=\"#\" onClick={this.switchTab.bind(this, \"lichsugd\")}>\n                    Lịch sử giao dịch\n                  </a>\n                </li>\n              </ul>\n\n              {tabContent}\n            </div>\n        );\n    }\n});\n\n\nvar InfoBox = React.createClass({\n    riskSliderChanged: function(value) {\n        me.set(\"riskFactor\", Math.floor(value));\n        me.save(null, {\n            success: function() {\n                alert(\"Đã lưu!\");\n            },\n            error: function(model, response, options) {\n                alert(\"Lỗi!\");\n                console.log(model, response, options);\n            }\n        });\n    },\n\n    render: function() {\n        // FIXME Decouple from `me`\n        var spacing = 20;\n\n        var styles = {\n            personalInfo: {\n                float: \"left\",\n                marginRight: spacing,\n                minWidth: \"8em\"\n            },\n            accountInfo: {\n                overflow: \"hidden\",\n                fontSize: \"16px\",\n                borderLeft: \"1px solid #DDD\",\n                paddingLeft: spacing\n            },\n            accountInfoRow: {\n                marginBottom: \"1em\"\n            },\n            riskSlider: {\n                marginLeft: 10,\n                marginRight: 10\n            },\n            label: {\n                marginRight: \"1em\"\n            },\n        };\n\n        return (\n            <div className=\"panel panel-default\">\n              <div className=\"panel-body clearfix\">\n                <div ref=\"personalInfo\" style={{float: \"left\", marginRight: spacing}}>\n                  <img src=\"/static/img/avatar.png\" style={{height: 120}}/>\n                </div>\n\n                <div ref=\"personalInfo\" style={styles.personalInfo}>\n                  <strong style={{fontSize: \"1.5em\"}}>{me.get(\"name\")}</strong><br/>\n\n                  <div>\n                  {me.get(\"id\")}<br/>\n                  TK: {me.get(\"accountNumber\")}\n                  </div>\n                </div>\n\n                <div ref=\"accountInfo\" style={styles.accountInfo}>\n                  <div className=\"row\" style={styles.accountInfoRow}>\n                    <div className=\"col-md-3\">\n                      <span>Lợi nhuận</span><br/>\n                      <strong className=\"text-success\">{formatCurrency(me.get(\"profit\"))}</strong>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <span>Tài sản</span><br/>\n                      <strong className=\"text-success\">{formatCurrency(me.get(\"totalCurrentValue\"))}</strong>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <span>Chứng khoán</span><br/>\n                      <strong className=\"text-success\">{formatCurrency(me.get(\"stockValue\"))}</strong>\n                    </div>\n                    <div className=\"col-md-3\">\n                      <span>Tiền mặt</span><br/>\n                      <strong className=\"text-success\">{formatCurrency(me.get(\"cash\"))}</strong>\n                    </div>\n                  </div>\n\n                  <div className=\"row\" style={styles.accountInfoRow}>\n                    <div className=\"col-md-12\">\n                      <h4>Tốc độ đầu tư:</h4>\n                      <RiskSlider ref=\"riskSlider\"\n                                  onChange={this.riskSliderChanged}\n                                  style={styles.riskSlider}\n                                  withoutPips={true}/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        );\n    }\n});\n\n\nvar PositionPanel = React.createClass({\n    getInitialState: function() {\n        return {\n            viewType: \"all\",\n            marketPrices: {},\n        };\n    },\n\n    reloadPrices: function() {\n        _.map(positions.groupBy(\"stock\"), function (positions, stockSymbol) {});\n    },\n\n    componentDidMount: function() {\n        me.get(\"positions\").on(\"change\", this.render);\n    },\n\n    changeViewType: function(event) {\n        this.setState({viewType: event.target.value});\n    },\n\n    /**\n     * Get position rows, grouped by traders.\n     */\n    positionRowsByTrader: function (positions) {\n        var self = this;\n\n        var posByTrader = positions.groupBy(\"mimickingUser\");\n        var result = _.map(posByTrader, function (positions, traderAccount) {\n            var rowsForThisTrader = _.map(positions, function (pos) {\n                var marketPrice = self.state.marketPrices[pos.get(\"stock\")];\n                var totalCost = pos.get(\"buyingPrice\") * pos.get(\"quantity\");\n                var totalValue = marketPrice * pos.get(\"quantity\");\n                var gain = totalValue - totalCost;\n                var roi = (gain / totalCost * 100).toFixed(2);\n                return (\n                    <tr>\n                      <td>{pos.get(\"stock\")}</td>\n                      <td>HOSE</td>\n                      <td>{pos.get(\"quantity\")}</td>\n                      <td>{formatCurrency(pos.get(\"buyingPrice\"))}</td>\n                      <td>{formatCurrency(marketPrice)}</td>\n                      <td>{formatCurrency(totalCost)}</td>\n                      <td>{formatCurrency(totalValue)}</td>\n                      <td><span className=\"text-success\">{roi}%</span></td>\n                    </tr>\n                );\n            });\n\n            var traderName = traders.get(traderAccount).get(\"name\");\n\n            var headerRow = (\n                <tr style={{backgroundColor: \"#cbffaf\"}}>\n                  <td colSpan=\"7\">{traderName}</td>\n                  <td>{formatCurrency(25628674)} (25%)</td>\n                </tr>\n            );\n\n            return _.union([headerRow], rowsForThisTrader);\n        });\n\n        return _.flatten(result);\n    },\n\n    /**\n     * Get position rows, lumped together by stock symbol.\n     */\n    positionRowsAll: function (positions) {\n        var self = this;\n\n        function add(a, b) {\n            return a + b;\n        }\n\n        return _.map(positions.groupBy(\"stock\"), function (positions, stockSymbol) {\n            var totalCost = _.reduce(_.map(positions, function (pos) {\n                return pos.get(\"buyingPrice\") * pos.get(\"quantity\");\n            }), add);\n            var totalQuantity = _.reduce(_.map(positions, function (pos) {return pos.get(\"quantity\")}),\n                                         add);\n\n            var marketPrice = self.state.marketPrices[stockSymbol];\n            var totalValue = marketPrice * totalQuantity;\n            var gain = totalValue - totalCost;\n            var roi = (gain / totalCost * 100).toFixed(2);\n\n            return  (\n                <tr>\n                  <td>{stockSymbol}</td>\n                  <td>HOSE</td>\n                  <td>{totalQuantity}</td>\n                  <td>{formatCurrency(totalCost / totalQuantity)}</td>\n                  <td>{formatCurrency(marketPrice)}</td>\n                  <td>{formatCurrency(totalCost)}</td>\n                  <td>{formatCurrency(totalValue)}</td>\n                  <td><span className=\"text-success\">{roi}%</span></td>\n                </tr>\n            );\n        });\n    },\n\n    render: function() {\n        var positions = me.get(\"positions\");\n        if (this.state.viewType === \"by-trader\") {\n            var positionRows = this.positionRowsByTrader(positions);\n        } else {\n            var positionRows = this.positionRowsAll(positions);\n        }\n\n        return (\n            <div className=\"panel panel-default panel-tabbed\">\n              <div className=\"panel-body\">\n                <select ref=\"viewTypeSelector\"\n                        value={this.state.viewType}\n                        onChange={this.changeViewType}\n                        style={{marginBottom: \"1em\"}}>\n                  <option value=\"all\">Toàn bộ</option>\n                  <option value=\"by-trader\">Theo chiến lược gia</option>\n                </select>\n\n                <table className=\"table table-striped table-hover table-bordered\">\n                  <thead>\n                    <tr>\n                      <th>Mã CK</th>\n                      <th>Sàn</th>\n                      <th>Khối lượng</th>\n                      <th>Giá vốn</th>\n                      <th>Giá thị trường</th>\n                      <th>Tổng giá vốn</th>\n                      <th>Tổng giá thị trường</th>\n                      <th>Lợi nhuận</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {positionRows}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n        );\n    }\n});\n\n\nvar OverviewPanel = React.createClass({\n    componentDidMount: function() {\n        var data = {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n            datasets: [\n                {\n                    label: \"My First dataset\",\n                    fillColor: \"rgba(220,220,220,0.2)\",\n                    strokeColor: \"rgba(220,220,220,1)\",\n                    pointColor: \"rgba(220,220,220,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(220,220,220,1)\",\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: \"My Second dataset\",\n                    fillColor: \"rgba(255, 153, 0, 0.2)\",\n                    strokeColor: \"rgba(255, 153, 0, 1)\",\n                    pointColor: \"rgba(255, 153, 0, 1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(255, 153, 0, 1)\",\n                    data: [28, 48, 40, -22, 86, 27, 90]\n                }\n            ]\n        };\n\n        var ctx = this.refs.overviewChart.getDOMNode().getContext(\"2d\");\n        var chart = new Chart(ctx).Line(data, {\n            responsive: true\n        });\n    },\n    render: function () {\n        var style = \"\\\n        canvas {\\\n            width: 100%;\\\n        };\";\n\n        return (\n            <div className=\"panel panel-default panel-overview panel-tabbed\">\n\n                <style scoped={true}>\n                {style}\n                </style>\n\n              <div className=\"panel-body\">\n                <div className=\"info-pane\">\n                  <img src=\"/static/img/avatar.png\" alt=\"\"/>\n                  <div>\n                    <div><span className=\"ui-label-strong\">TraderAAA</span></div>\n                    <div className=\"second-line\">\n                      <div>\n                        <span className=\"ui-label-strong\">Lãi hiện tại: </span>\n                          {formatCurrency(23223423)}\n                      </div>\n                      <div>\n                        <span className=\"ui-label-strong\">Lãi thực tế: </span>\n                        {formatCurrency(23223423)}\n                      </div>\n                      <div>\n                        <span className=\"ui-label-strong\">ROI: </span>\n                        24%\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div ref=\"graph\" className=\"panel-overview-graph\">\n                  <canvas ref=\"overviewChart\"></canvas>\n                </div>\n              </div>\n            </div>\n        );\n    }\n});\n"]}